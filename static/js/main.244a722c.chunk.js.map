{"version":3,"sources":["demo/serviceWorker.js","demo/test/TestRoutes.jsx","demo/utility/menu.js","demo/components/Sidebar/Sidebar.jsx","demo/layouts/Admin.jsx","demo/layouts/Main.jsx","index.js","demo/views lazy /^/.//.*$/ groupOptions: {} namespace object","demo/assets/img/logo-white.svg"],"names":["Boolean","window","location","hostname","match","TestHighlight","lazy","getMenu","array","nodes","key","parentIndex","_nodes","children","index","React","cloneElement","Array","isArray","node","createElement","SubMenu","title","groupName","push","MenuItem","mapTreeToFlatArray","routes","item","concat","getFlatArray","inputArray","_children","getKey","replace","ps","localRoutes","Sidebar","props","state","activeRoute","bind","routeName","this","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","menu","Math","random","toString","buildMenu","setState","destroy","className","data-color","backgroundColor","src","logo","alt","ref","onClick","e","history","file","mode","Component","Dashboard","routesList","mainPanel","createRef","handleColorClick","color","prevState","current","document","body","classList","toggle","action","scrollTop","scrollingElement","fallback","map","prop","path","render","id","params","viewName","view","RenderedView","length","routeProp","styles","bodyContainer","display","justifyContent","alignItems","height","width","container","borderRadius","fontSize","textAlign","normal","error","errorHeader","normalHeader","loadButton","padding","border","fontWeight","cursor","checkStatus","response","ok","Error","status","statusText","Main","useState","isLoaded","data","setRoutes","loadHandler","useCallback","useEffect","values","queryString","parse","search","sampleURL","url","a","async","fetch","json","loadData","then","remoteRoutes","Admin","style","type","ReactDOM","component","getElementById","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","code","ids","all","slice","keys","Object","module","exports"],"mappings":"mPAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCfN,IAAMC,EAAgBC,gBAAK,kBAAM,uD,8HCkBjC,SAASC,IAAuD,IAA/CC,EAA8C,uDAAtC,GAAIC,EAAkC,uDAA1B,GAAIC,EAAsB,uCAAjBC,EAAiB,uDAAH,EACtDC,EAASH,EACTI,EAAW,GAMf,IAAK,IAAMC,KAJU,IAAjBH,GAAsBC,EAAOD,KAC/BC,EAAOD,GAAeI,IAAMC,aAAaJ,EAAOD,GAAc,GAAIE,IAGhDL,EAAO,CACzB,GAAIA,EAAMM,GAAOD,UAAYI,MAAMC,QAAQV,EAAMM,GAAOD,UAAW,CACjE,IAAMM,EAAOJ,IAAMK,cAAcC,IAAS,CACxCX,IAAKI,EAAQJ,EACbY,MAAOd,EAAMM,GAAOS,YAGtB,OADAX,EAAOY,KAAKL,GACLZ,EAAQC,EAAMM,GAAOD,SAAUD,EAAQF,EAAK,GAEnDG,EAASW,KACPT,IAAMK,cACJK,IADF,aAEIf,IAAKI,EAAQJ,GAAQF,EAAMM,IAC7BN,EAAMM,GAAOQ,QAKrB,OAAOV,EAGT,SAASc,IAAgC,IAAblB,EAAY,uDAAJ,GAC9BmB,EAAS,GADyB,uBAEtC,YAAmBnB,EAAnB,+CAA0B,CAAC,IAAhBoB,EAAe,QACpBA,EAAKf,UAAYI,MAAMC,QAAQU,EAAKf,UACtCc,EAASA,EAAOE,OAAOC,EAAa,CAACF,GAAO,KAE5CD,EAAOH,KAAKI,IANsB,kFAStC,OAAOD,EAGT,SAASG,IAA8C,IAAjCC,EAAgC,uDAAnB,GAAIlB,EAAe,uDAAJ,GAC5CmB,EAAYnB,EADoC,uBAGpD,YAAmBkB,EAAnB,+CAA+B,CAAC,IAArBH,EAAoB,QAC7B,GAAIA,EAAKf,UAAYI,MAAMC,QAAQU,EAAKf,UACtC,OAAOiB,EAAaF,EAAKf,SAAUmB,GAEnCnB,EAASW,KAAKI,IAPkC,kFAUpD,OAAOI,EAGT,SAASC,IACP,OAD6B,uDAAJ,IACTC,QAAQ,YAAa,I,IChDnCC,ECAAA,EACAC,E,iBD8FWC,G,mBA3Fb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAFRC,MAAQ,CAAEZ,OAAQ,IAGhB,EAAKa,YAAYC,KAAjB,gBAFiB,E,yEAKPC,GACV,OAAOC,KAAKL,MAAMpC,SAAS0C,SAASC,QAAQH,IAAc,EAAI,SAAW,K,0CAGrEI,UAAUC,SAASF,QAAQ,QAAU,IACvCV,EAAK,IAAIa,IAAiBL,KAAKM,KAAKC,QAAS,CAC3CC,iBAAiB,EACjBC,iBAAiB,KAGrB,IAAMzB,ED5CV,WAAgC,IAAbnB,EAAY,uDAAJ,GACrB6C,EAAO,GADkB,uBAE7B,YAAmB7C,EAAnB,+CAA0B,CAAC,IAAhBoB,EAAe,QAClBlB,EAAM4C,KAAKC,SACdC,SAAS,IACTtB,QAAQ,KAAM,IAEbN,EAAKf,UAAYI,MAAMC,QAAQU,EAAKf,UACtCwC,EAAK7B,KAAKjB,EAAQ,CAACqB,GAAO,GAAIlB,IAE9B2C,EAAK7B,KACHT,IAAMK,cAAcK,IAApB,aAAgCf,IAAKkB,EAAKN,OAAUM,GAAQA,EAAKN,SAX1C,kFAe7B,OAAO+B,EC6BUI,CAAUd,KAAKL,MAAMX,OAAQ,IAC5CgB,KAAKe,SAAS,CAAE/B,a,6CAGZmB,UAAUC,SAASF,QAAQ,QAAU,GACvCV,EAAGwB,Y,+BAIG,IAAD,OACP,OACE,yBAAKC,UAAU,UAAUC,aAAYlB,KAAKL,MAAMwB,iBAC9C,yBAAKF,UAAU,QACb,uBAEEA,UAAU,yBAGV,yBAAKA,UAAU,YACb,yBAAKG,IAAKC,IAAMC,IAAI,iBAGxB,uBAEEL,UAAU,2BAFZ,WAQF,yBAAKA,UAAU,kBAAkBM,IAAI,WACnC,kBAAC,IAAD,CACEC,QAAS,SAACC,GACR,EAAK9B,MAAM+B,QAAQ7C,KAAnB,4BACuB8B,KAAKC,SACvBC,SAAS,IACTtB,QAAQ,KAAM,IAHnB,YAG0BD,EAAOmC,EAAExC,KAAKU,MAAMgC,SAGhDC,KAAK,UAEJ5B,KAAKJ,MAAMZ,c,GA1DFZ,IAAMyD,YC4HbC,E,2MA3HblC,MAAQ,CAAEuB,gBAAiB,OAAQY,WAAY,GAAI/C,OAAQ,I,EAkC3DgD,UAAY5D,IAAM6D,Y,EAElBC,iBAAmB,SAACC,GAClB,EAAKpB,SAAS,CAAEI,gBAAiBgB,K,oFAjCjC1C,EAAcO,KAAKL,MAAMX,OAASgB,KAAKL,MAAMX,OAASS,EACtDO,KAAKe,UAAS,SAACqB,GACb,OAAO,eACFA,EADL,CAEEL,WAAYhD,EAAmBU,GAC/BT,OAAQS,S,0CAMRU,UAAUC,SAASF,QAAQ,QAAU,IACvCV,EAAK,IAAIa,IAAiBL,KAAKgC,UAAUK,SACzCC,SAASC,KAAKC,UAAUC,OAAO,2B,yCAIhBhB,GACQ,SAArBA,EAAEC,QAAQgB,SACZ1C,KAAKgC,UAAUK,QAAQM,UAAY,EACnCL,SAASM,iBAAiBD,UAAY,K,6CAKpCxC,UAAUC,SAASF,QAAQ,QAAU,IACvCV,EAAGwB,UACHsB,SAASC,KAAKC,UAAUC,OAAO,2B,+BASzB,IAAD,OACP,OACE,yBAAKxB,UAAU,WACb,kBAAC,EAAD,iBACMjB,KAAKL,MADX,CAEEX,OAAQgB,KAAKJ,MAAMZ,OACnBmC,gBAAiBnB,KAAKJ,MAAMuB,mBAE9B,yBAAKF,UAAU,aAAaM,IAAKvB,KAAKgC,WAEpC,kBAAC,WAAD,CAAUa,SAAU,4CAClB,kBAAC,IAAD,KACG7C,KAAKJ,MAAMmC,WAAWe,KAAI,SAACC,GAAD,OACzB,kBAAC,IAAD,CACEC,KAAI,gCAA2B1D,EAAOyD,EAAKpB,OAE3CsB,OAAQ,SAACtD,GAAW,IAGJuD,EAEVvD,EAHFlC,MACE0F,OAAUD,GAGRE,EAAWL,EAAKM,KAAON,EAAKM,KAAO,OACnCC,EAAelF,IAAMT,MAAK,kBAC9B,MAAO,YAAYyF,OAGrB,OACE,kBAACE,EAAD,eAAcvF,IAAKmF,GAAQH,EAA3B,CAAiCG,GAAI5D,EAAOyD,EAAKpB,UAGrD5D,IAAKuB,EAAOyD,EAAKpB,WAIpB3B,KAAKJ,MAAMmC,WAAWwB,OAAS,GAC9B,kBAAC,IAAD,CACEP,KAAK,IAGLC,OAAQ,WACN,IAAMO,EAAY,EAAK5D,MAAMmC,WAAW,GAClCqB,EAAWI,EAAUH,KAAOG,EAAUH,KAAO,OAC7CC,EAAelF,IAAMT,MAAK,kBAC9B,MAAO,YAAYyF,OAGrB,OAAO,kBAACE,EAAiBE,EAAU,KAErCzF,IAAKuB,EAAOU,KAAKJ,MAAMmC,WAAW,GAAGJ,gB,GA1F/BvD,IAAMyD,WCvBxB4B,EAAS,CACbC,cAAe,CACbC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRC,MAAO,QACP5C,gBAAiB,WAGnB6C,UAAW,CACTD,MAAO,MACPD,OAAQ,MACRH,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBK,aAAc,OACdC,SAAU,OACVC,UAAW,UAEbC,OAAQ,CACNjD,gBAAiB,QACjBgB,MAAO,SAETkC,MAAO,CACLlD,gBAAiB,MACjBgB,MAAO,SAETmC,YAAa,CACXJ,SAAU,SAEZK,aAAc,CACZL,SAAU,QAEZM,WAAY,CACVN,SAAU,OACVO,QAAS,YACTR,aAAc,OACdS,OAAQ,oBACRC,WAAY,OACZC,OAAQ,YAcZ,SAASC,EAAYC,GACnB,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,eAAkBF,EAASG,OAA3B,cAAuCH,EAASI,aAExD,OAAOJ,EAGT,IA6DeK,EA7DF,SAACxF,GAAW,IAAD,EACIyF,mBAAS,CACjCC,UAAU,EACVJ,OAAQ,IACRjG,OAAQ,KAJY,mBACfsG,EADe,KACTC,EADS,KAOhBC,EAAcC,uBAAY,WAC9BF,EAAU,CAAEF,UAAU,EAAMJ,OAAQ,IAAKjG,OAAQA,MAChD,IAmBH,OAjBA0G,qBAAU,WACR,IAAMC,EAASC,IAAYC,MAAMlG,EAAMpC,SAASuI,QAC5CH,GAAUA,EAAOI,UA/BzB,SAAwBC,GAAxB,iBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACyBE,MAAMH,IAD/B,cACQlB,EADR,gBAGID,EAAYC,GAHhB,WAAAmB,EAAA,MAIuBnB,EAASsB,QAJhC,cAIUd,EAJV,yBAKWA,GALX,2DAOW,MAPX,yDAgCMe,CAASV,EAAOI,WAAWO,MAAK,SAACC,GAE7BhB,EADEgB,EACQ,CAAElB,UAAU,EAAMJ,OAAQ,IAAKjG,OAAQuH,GAEvC,CAAElB,UAAU,EAAOJ,OAAQ,IAAKjG,OAAQ,QAKtDuG,EAAU,CAAEF,UAAU,EAAMJ,OAAQ,IAAKjG,OAAQA,MAGlD,IAEKsG,EAAKD,SA6BX,kBAACmB,EAAD,iBAAiB7G,EAAjB,CAAwBX,OAAQsG,EAAKtG,UA5BrC,yBAAKyH,MAAOhD,EAAOC,eACjB,yBACE+C,MAAK,eACAhD,EAAOO,UADP,GAEiB,MAAhBsB,EAAKL,OAAiBxB,EAAOW,OAASX,EAAOY,QAGlC,MAAhBiB,EAAKL,OACJ,6BACE,uBAAGwB,MAAOhD,EAAOc,cAAjB,eACA,gEAGF,6BACE,uBAAGkC,MAAOhD,EAAOa,aAAjB,OACA,kDACA,4BACEmC,MAAOhD,EAAOe,WACdkC,KAAK,SACLlF,QAASgE,GAHX,0B,4BCnGZmB,IAAS1D,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,SAACtD,GAAD,OAAW,kBAAC,EAASA,MAK7C,kBAAC,IAAD,CAAOqD,KAAK,QAAQ4D,ULjBX,WACb,OACE,kBAAC,WAAD,CAAU/D,SAAU,MAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,KAAK,kBAAkB4D,UAAWlJ,IACzC,kBAAC,IAAD,CAAOuF,OAAQ,kBAAM,yDKgB3BX,SAASuE,eAAe,SNuGpB,kBAAmB1G,WACrBA,UAAU2G,cAAcC,MAAMT,MAAK,SAACU,GAClCA,EAAaC,iB,sjDOnInB,IAAInE,EAAM,CACT,aAAc,CACb,GACA,EACA,EACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,EACA,EACA,GAED,SAAU,CACT,GACA,EACA,EACA,EACA,GAED,aAAc,CACb,GACA,EACA,EACA,EACA,GAED,SAAU,CACT,GACA,EACA,EACA,EACA,GAED,aAAc,CACb,GACA,EACA,EACA,EACA,IAGF,SAASoE,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEvE,EAAKqE,GAC9B,OAAOG,QAAQC,UAAUjB,MAAK,WAC7B,IAAI7E,EAAI,IAAIuD,MAAM,uBAAyBmC,EAAM,KAEjD,MADA1F,EAAE+F,KAAO,mBACH/F,KAIR,IAAIgG,EAAM3E,EAAIqE,GAAMjE,EAAKuE,EAAI,GAC7B,OAAOH,QAAQI,IAAID,EAAIE,MAAM,GAAG7E,IAAIsE,EAAoB3F,IAAI6E,MAAK,WAChE,OAAOc,EAAoBlE,MAG7BgE,EAAoBU,KAAO,WAC1B,OAAOC,OAAOD,KAAK9E,IAEpBoE,EAAoBhE,GAAK,GACzB4E,EAAOC,QAAUb,G,mBC9DjBY,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.244a722c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nconst TestHighlight = lazy(() => import('./TestHighlight'));\n\nexport default function TestRoutes() {\n  return (\n    <Suspense fallback={null}>\n      <Switch>\n        <Route path=\"/test/highlight\" component={TestHighlight} />\n        <Route render={() => <div>Page not found</div>} />\n      </Switch>\n    </Suspense>\n  );\n}\n","import React from 'react';\nimport { SubMenu, MenuItem } from 'rc-menu';\n\nfunction buildMenu(array = []) {\n  let menu = [];\n  for (const item of array) {\n    const key = Math.random()\n      .toString(36)\n      .replace('0.', '');\n\n    if (item.children && Array.isArray(item.children)) {\n      menu.push(getMenu([item], [], key));\n    } else {\n      menu.push(\n        React.createElement(MenuItem, { key: item.title, ...item }, item.title),\n      );\n    }\n  }\n  return menu;\n}\n\nfunction getMenu(array = [], nodes = [], key, parentIndex = 0) {\n  let _nodes = nodes;\n  let children = [];\n\n  if (parentIndex !== -1 && _nodes[parentIndex]) {\n    _nodes[parentIndex] = React.cloneElement(_nodes[parentIndex], {}, children);\n  }\n\n  for (const index in array) {\n    if (array[index].children && Array.isArray(array[index].children)) {\n      const node = React.createElement(SubMenu, {\n        key: index + key,\n        title: array[index].groupName,\n      });\n      _nodes.push(node);\n      return getMenu(array[index].children, _nodes, key, 0);\n    } else {\n      children.push(\n        React.createElement(\n          MenuItem,\n          { key: index + key, ...array[index] },\n          array[index].title,\n        ),\n      );\n    }\n  }\n  return _nodes;\n}\n\nfunction mapTreeToFlatArray(array = []) {\n  let routes = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      routes = routes.concat(getFlatArray([item], []));\n    } else {\n      routes.push(item);\n    }\n  }\n  return routes;\n}\n\nfunction getFlatArray(inputArray = [], children = []) {\n  let _children = children;\n\n  for (const item of inputArray) {\n    if (item.children && Array.isArray(item.children)) {\n      return getFlatArray(item.children, _children);\n    } else {\n      children.push(item);\n    }\n  }\n  return _children;\n}\n\nfunction getKey(filePath = '') {\n  return filePath.replace(/\\.|\\s|\\//g, '');\n}\n\nexport { buildMenu, getKey, mapTreeToFlatArray };\n","/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Nav } from 'reactstrap';\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { buildMenu, getKey } from '../../utility/menu';\nimport Menu from 'rc-menu';\nimport logo from '../../assets/img/logo-white.svg';\nimport 'rc-menu/assets/index.css';\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = { routes: [] };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    const routes = buildMenu(this.props.routes, []);\n    this.setState({ routes });\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps.destroy();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.backgroundColor}>\n        <div className=\"logo\">\n          <a\n            // href=\"https://www.creative-tim.com?ref=nudr-sidebar\"\n            className=\"simple-text logo-mini\"\n            // target=\"_blank\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            // href=\"https://www.creative-tim.com?ref=nudr-sidebar\"\n            className=\"simple-text logo-normal\"\n            // target=\"_blank\"\n          >\n            NMRium\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Menu\n            onClick={(e) => {\n              this.props.history.push(\n                `/SamplesDashboard/${Math.random()\n                  .toString(36)\n                  .replace('0.', '')}/${getKey(e.item.props.file)}`,\n              );\n            }}\n            mode=\"inline\"\n          >\n            {this.state.routes}\n          </Menu>\n\n          {/* <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.layout + prop.path) +\n                    (prop.pro ? ' active active-pro' : '')\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    style={{ borderRadius: '10px' }}\n                  >\n                    <i className={'now-ui-icons ' + prop.icon} />\n                    <p style={{ whiteSpace: 'pre-line', paddingLeft: '60px' }}>\n                      {prop.name}\n                    </p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Suspense } from 'react';\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from 'perfect-scrollbar';\n// reactstrap components\nimport { Route, Switch } from 'react-router-dom';\n\n// core components\nimport Sidebar from '../components/Sidebar/Sidebar';\n// import View from '../views/View';\nimport { mapTreeToFlatArray, getKey } from '../utility/menu';\n\nlet ps;\nlet localRoutes;\nclass Dashboard extends React.Component {\n  state = { backgroundColor: 'blue', routesList: [], routes: [] };\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    localRoutes = this.props.routes ? this.props.routes : localRoutes;\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        routesList: mapTreeToFlatArray(localRoutes),\n        routes: localRoutes,\n      };\n    });\n  }\n\n  componentDidMount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle('perfect-scrollbar-on');\n    }\n  }\n\n  componentDidUpdate(e) {\n    if (e.history.action === 'PUSH') {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n\n  componentWillUnmount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps.destroy();\n      document.body.classList.toggle('perfect-scrollbar-on');\n    }\n  }\n  mainPanel = React.createRef();\n\n  handleColorClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={this.state.routes}\n          backgroundColor={this.state.backgroundColor}\n        />\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          {/* <Router {...this.props}> */}\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              {this.state.routesList.map((prop) => (\n                <Route\n                  path={`/SamplesDashboard/:id/${getKey(prop.file)}`}\n                  // component={prop.component}\n                  render={(props) => {\n                    const {\n                      match: {\n                        params: { id },\n                      },\n                    } = props;\n                    const viewName = prop.view ? prop.view : 'View';\n                    const RenderedView = React.lazy(() =>\n                      import(`../views/${viewName}`),\n                    );\n\n                    return (\n                      <RenderedView key={id} {...prop} id={getKey(prop.file)} />\n                    );\n                  }}\n                  key={getKey(prop.file)}\n                />\n              ))}\n\n              {this.state.routesList.length > 0 && (\n                <Route\n                  path=\"/\"\n                  // component={prop.component}\n\n                  render={() => {\n                    const routeProp = this.state.routesList[0];\n                    const viewName = routeProp.view ? routeProp.view : 'View';\n                    const RenderedView = React.lazy(() =>\n                      import(`../views/${viewName}`),\n                    );\n\n                    return <RenderedView {...routeProp[0]} />;\n                  }}\n                  key={getKey(this.state.routesList[0].file)}\n                />\n              )}\n            </Switch>\n          </Suspense>\n          {/* </Router> */}\n          {/* <DemoNavbar {...this.props} /> */}\n          {/* <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  // component={prop.component}\n                  render={(props) =>\n                    React.cloneElement(prop.component, { ...props, ...prop })\n                  }\n                  key={key}\n                />\n              );\n            })}\n            <Redirect from=\"/admin\" to={`/admin${routes[0].path}`} />\n          </Switch> */}\n\n          {/* <Footer fluid /> */}\n        </div>\n        {/* <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleColorClick={this.handleColorClick}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport queryString from 'query-string';\n\nimport routes from '../samples';\n\nimport AdminLayout from './Admin.jsx';\n\nconst styles = {\n  bodyContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: '#e3e3e3',\n  },\n\n  container: {\n    width: '30%',\n    height: '40%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '10px',\n    fontSize: '20px',\n    textAlign: 'center',\n  },\n  normal: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  error: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  errorHeader: {\n    fontSize: '100px',\n  },\n  normalHeader: {\n    fontSize: '24px',\n  },\n  loadButton: {\n    fontSize: '12px',\n    padding: '12px 40px',\n    borderRadius: '10px',\n    border: '1px solid #c70000',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n  },\n};\nasync function loadData(url) {\n  const response = await fetch(url);\n  try {\n    checkStatus(response);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst Main = (props) => {\n  const [data, setRoutes] = useState({\n    isLoaded: false,\n    status: 200,\n    routes: [],\n  });\n\n  const loadHandler = useCallback(() => {\n    setRoutes({ isLoaded: true, status: 200, routes: routes });\n  }, []);\n\n  useEffect(() => {\n    const values = queryString.parse(props.location.search);\n    if (values && values.sampleURL) {\n      loadData(values.sampleURL).then((remoteRoutes) => {\n        if (remoteRoutes) {\n          setRoutes({ isLoaded: true, status: 200, routes: remoteRoutes });\n        } else {\n          setRoutes({ isLoaded: false, status: 404, routes: [] });\n        }\n      });\n      //   console.log(remoteRoutes);\n    } else {\n      setRoutes({ isLoaded: true, status: 200, routes: routes });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return !data.isLoaded ? (\n    <div style={styles.bodyContainer}>\n      <div\n        style={{\n          ...styles.container,\n          ...(data.status === 200 ? styles.normal : styles.error),\n        }}\n      >\n        {data.status === 200 ? (\n          <div>\n            <p style={styles.normalHeader}>Please wait</p>\n            <p>We will redirect you in a minute</p>\n          </div>\n        ) : (\n          <div>\n            <p style={styles.errorHeader}>404</p>\n            <p>Resource not found.</p>\n            <button\n              style={styles.loadButton}\n              type=\"button\"\n              onClick={loadHandler}\n            >\n              Load local samples\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  ) : (\n    <AdminLayout {...props} routes={data.routes} />\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch /*Redirect*/ } from 'react-router-dom';\n\nimport * as serviceWorker from './demo/serviceWorker';\n// import AdminLayout from './demo/layouts/Admin.jsx';\nimport TestRoutes from './demo/test/TestRoutes.jsx';\nimport Main from './demo/layouts/Main';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './demo/index.css';\nimport './demo/assets/css/now-ui-dashboard.min.css';\nimport './demo/assets/css/demo.css';\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" render={(props) => <Main {...props} />} />\n      {/* <Route\n        path=\"/SamplesDashboard\"\n        render={(props) => <AdminLayout {...props} />}\n      /> */}\n      <Route path=\"/test\" component={TestRoutes} />\n      {/* <Redirect to=\"/SamplesDashboard/dashboard\" /> */}\n    </Switch>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./Exercise\": [\n\t\t93,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3\n\t],\n\t\"./Exercise.jsx\": [\n\t\t93,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3\n\t],\n\t\"./Test\": [\n\t\t94,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t4\n\t],\n\t\"./Test.jsx\": [\n\t\t94,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t4\n\t],\n\t\"./View\": [\n\t\t95,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5\n\t],\n\t\"./View.jsx\": [\n\t\t95,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 81;\nmodule.exports = webpackAsyncContext;","module.exports = __webpack_public_path__ + \"static/media/logo-white.eec7c7f6.svg\";"],"sourceRoot":""}